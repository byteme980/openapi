{
  "openapi": "3.0.2",
  "info": {
    "title": "Klaviyo API (Beta)",
    "version": "2022-12-15.pre",
    "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
    "contact": {
      "name": "Klaviyo Developer Experience Team",
      "email": "developers@klaviyo.com",
      "url": "https://developers.klaviyo.com"
    },
    "termsOfService": "https://www.klaviyo.com/legal/api-terms",
    "license": {
      "name": "License",
      "url": "https://www.klaviyo.com/legal"
    }
  },
  "paths": {
    "/api/campaigns/": {
      "get": {
        "operationId": "get_campaigns",
        "summary": "Get Campaigns",
        "description": "Returns some or all campaigns based on [optional] filters<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Read`",
        "parameters": [
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "channel",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.ignore_unsubscribes",
                  "message",
                  "tracking_options",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_add_utm",
                  "tracking_options.utm_params",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`<br>`status`: `any`, `equals`<br>`archived`: `equals`<br>`created_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`scheduled_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`updated_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "created_at",
                "-created_at",
                "id",
                "-id",
                "name",
                "-name",
                "scheduled_at",
                "-scheduled_at",
                "updated_at",
                "-updated_at"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseCollectionWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_campaign",
        "summary": "Create Campaign",
        "description": "Creates a campaign given a set of parameters, then returns it.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCreateQuery"
              }
            }
          },
          "description": "Creates a campaign from parameters"
        }
      }
    },
    "/api/campaigns/{id}/": {
      "get": {
        "operationId": "get_campaign",
        "summary": "Get Campaign",
        "description": "Returns a specific campaign based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "status",
                  "archived",
                  "channel",
                  "audiences",
                  "audiences.included",
                  "audiences.excluded",
                  "send_options",
                  "send_options.use_smart_sending",
                  "send_options.ignore_unsubscribes",
                  "message",
                  "tracking_options",
                  "tracking_options.is_tracking_opens",
                  "tracking_options.is_tracking_clicks",
                  "tracking_options.is_add_utm",
                  "tracking_options.utm_params",
                  "send_strategy",
                  "send_strategy.method",
                  "send_strategy.options_static",
                  "send_strategy.options_static.datetime",
                  "send_strategy.options_static.is_local",
                  "send_strategy.options_static.send_past_recipients_immediately",
                  "send_strategy.options_throttled",
                  "send_strategy.options_throttled.datetime",
                  "send_strategy.options_throttled.throttle_percentage",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "include",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              }
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#relationships"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignResponseWithIncludedSection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_campaign",
        "summary": "Update Campaign",
        "description": "Update a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignPartialUpdateQuery"
              }
            }
          },
          "description": "Update a campaign and return it"
        }
      },
      "delete": {
        "operationId": "delete_campaign",
        "summary": "Delete Campaign",
        "description": "Delete a campaign with the given campaign ID.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The campaign ID to be deleted",
            "schema": {
              "type": "string",
              "description": "The campaign ID to be deleted"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/campaign-messages/{id}/": {
      "get": {
        "operationId": "get_campaign_message",
        "summary": "Get Campaign Message",
        "description": "Returns a specific message based on a required id.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The message ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The message ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-message]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "label",
                  "channel",
                  "content",
                  "content.subject",
                  "content.preview_text",
                  "content.from_email",
                  "content.from_label",
                  "content.template_id",
                  "content.template_name",
                  "send_times",
                  "created_at",
                  "updated_at",
                  "campaign_id"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_campaign_message",
        "summary": "Update Campaign Message",
        "description": "Update a campaign message<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The message ID to be retrieved",
            "schema": {
              "type": "string",
              "description": "The message ID to be retrieved"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessagePartialUpdateQuery"
              }
            }
          },
          "description": "Update a message and return it"
        }
      }
    },
    "/api/campaigns/{campaign_id}/tags/": {
      "get": {
        "operationId": "get_campaign_tags",
        "summary": "Get Campaign Tags",
        "description": "Return all tags that belong to the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Campaigns Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "campaign_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/campaign-send-jobs/{id}/": {
      "get": {
        "operationId": "get_campaign_send_job",
        "summary": "Get Campaign Send Job",
        "description": "Get a campaign send job<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the campaign to send",
            "schema": {
              "type": "string",
              "description": "The ID of the campaign to send"
            },
            "in": "path"
          },
          {
            "name": "fields[campaign-send-job]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "status"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_campaign_send_job",
        "summary": "Update Campaign Send Job",
        "description": "Permanently cancel the campaign, setting the status to CANCELED or revert the campaign, setting the status back to DRAFT<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The ID of the currently sending campaign to cancel or revert",
            "schema": {
              "type": "string",
              "description": "The ID of the currently sending campaign to cancel or revert"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQuery"
              }
            }
          },
          "description": "Permanently cancel the campaign, setting the status to CANCELED or revert the campaign, setting the status back to DRAFT"
        }
      }
    },
    "/api/campaign-create-clones/": {
      "post": {
        "operationId": "create_campaign_clone",
        "summary": "Create Campaign Clone",
        "description": "Clones an existing campaign, returning a new campaign based on the original with a new ID and name.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignCloneQuery"
              }
            }
          },
          "description": "Clones a campaign from an existing campaign"
        }
      }
    },
    "/api/campaign-message-assign-templates/": {
      "post": {
        "operationId": "assign_campaign_message_template",
        "summary": "Assign Campaign Message Template",
        "description": "Creates a non-reusable version of the template and assigns it to the message.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignMessageResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignMessageAssignTemplateQuery"
              }
            }
          },
          "description": "Takes a reusable template, clones it, and assigns the non-reusable clone to the message."
        }
      }
    },
    "/api/campaign-send-jobs/": {
      "post": {
        "operationId": "create_campaign_send_job",
        "summary": "Create Campaign Send Job",
        "description": "Trigger a campaign to send asynchronously<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`\n\n**Scopes:**\n`Campaigns Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCampaignSendJobResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "10/s",
          "steady": "150/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignSendJobCreateQuery"
              }
            }
          },
          "description": "Trigger the campaign to send asynchronously"
        }
      }
    },
    "/api/campaigns/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_campaign_relationships",
        "summary": "Get Campaign Relationships",
        "description": "If the `related_resource` is `tags`, returns the IDs of all tags associated with the given campaign.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Campaigns Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignTagRelationshipListResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Campaigns"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Campaigns Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/data-privacy-deletion-jobs/": {
      "post": {
        "operationId": "request_profile_deletion",
        "summary": "Request Profile Deletion",
        "description": "Request a deletion for the profiles corresponding to one of the following identifiers: `email`, `phone_number`, or `profile_id`. If multiple identifiers are provided, we will return an error.\nAll profiles that match the provided identifier will be deleted.\n        The deletion occurs asynchronously; however, once it has completed, the deleted profile will appear on the [Deleted Profiles page](https://www.klaviyo.com/account/deleted).\n        For more information on the deletion process, please refer to our [Help Center docs on how to handle GDPR and CCPA deletion requests](https://help.klaviyo.com/hc/en-us/articles/360004217631-How-to-Handle-GDPR-Requests#record-gdpr-and-ccpa%20%20-deletion-requests2).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Data Privacy Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Data Privacy"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Data Privacy Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
              }
            }
          }
        }
      }
    },
    "/api/flows/{flow_id}/tags/": {
      "get": {
        "operationId": "get_flow_tags",
        "summary": "Get Flow Tags",
        "description": "Return all tags associated with the given flow ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "flow_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFlowTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Flows"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/lists/{list_id}/tags/": {
      "get": {
        "operationId": "get_list_tags",
        "summary": "Get List Tags",
        "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`List Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "list_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Lists"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "List Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/segments/{segment_id}/tags/": {
      "get": {
        "operationId": "get_segment_tags",
        "summary": "Get Segment Tags",
        "description": "Return all tags associated with the given segment ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Segments Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "segment_id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSegmentTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Segments"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Segments Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/tags/": {
      "get": {
        "operationId": "get_tags",
        "summary": "Get Tags",
        "description": "List all tags in an account.\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_tag",
        "summary": "Create Tag",
        "description": "Create a tag. An account cannot have more than **500** unique tags.\nA tag belongs to a single tag group. If the `tag_group_id` is not specified, the tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tags/{id}/": {
      "get": {
        "operationId": "get_tag",
        "summary": "Get Tag",
        "description": "Retrieve the tag with the given tag ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_tag",
        "summary": "Update Tag",
        "description": "Update the tag with the given tag ID.\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag",
        "summary": "Delete Tag",
        "description": "Delete the tag with the given tag ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag ID",
            "schema": {
              "type": "string",
              "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
              "description": "The Tag ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/tag-groups/": {
      "get": {
        "operationId": "get_tag_groups",
        "summary": "Get Tag Groups",
        "description": "List all tag groups in an account. Every account has one default tag group.\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page[cursor]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#pagination"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sorting"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_tag_group",
        "summary": "Create Tag Group",
        "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\nIf `exclusive` is not specified `true` or `false`, the tag group defaults to non-exclusive.\nIf a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupCreateQuery"
              }
            }
          }
        }
      }
    },
    "/api/tag-groups/{id}/": {
      "get": {
        "operationId": "get_tag_group",
        "summary": "Get Tag Group",
        "description": "Retrieve the tag group with the given tag group ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "fields[tag-group]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "name",
                  "exclusive",
                  "default"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "description": "For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#sparse-fieldsets"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "patch": {
        "operationId": "update_tag_group",
        "summary": "Update Tag Group",
        "description": "Update the tag group with the given tag group ID.\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagGroupUpdateQuery"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_group",
        "summary": "Delete Tag Group",
        "description": "Delete the tag group with the given tag group ID.\nAny tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "The Tag Group ID",
            "schema": {
              "type": "string",
              "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
              "description": "The Tag Group ID"
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTagGroupResponse"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    },
    "/api/tags/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_tag_relationships",
        "summary": "Get Tag Relationships",
        "description": "Get the relationships for a tag.\nIf `related_resource` is `tag-group`, the request will return the `tag_group_id` of the tag group to which the tag belongs.\nIf `related_resource` is set to `campaigns`, `flows`, `lists`, or `segments`, the request will return the IDs of all associated resources of that type.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Lists Read`\n`Segments Read`\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Read",
          "Lists Read",
          "Segments Read",
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      },
      "post": {
        "operationId": "create_tag_relationships",
        "summary": "Create Tag Relationships",
        "description": "Associate a tag with other resources. Any given resource cannot be associated with more than **100** tags.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) that will be associated with the tag.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Write",
          "Lists Write",
          "Segments Write",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "delete_tag_relationships",
        "summary": "Delete Tag Relationships",
        "description": "Remove a tag's association with other resources.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) whose association with the tag will be removed.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "flows",
                "lists",
                "segments",
                "tag-groups"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Flows Write",
          "Lists Write",
          "Segments Write",
          "Tags Write"
        ],
        "x-klaviyo-pre-release": "BETA",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSegmentOp"
              }
            }
          }
        }
      }
    },
    "/api/tag-groups/{id}/relationships/{related_resource}/": {
      "get": {
        "operationId": "get_tag_group_relationships",
        "summary": "Get Tag Group Relationships",
        "description": "When `related_resource` is `tags`, returns the tag IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            },
            "in": "path"
          },
          {
            "name": "related_resource",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "enum": [
                "tags"
              ]
            },
            "in": "path"
          },
          {
            "name": "revision",
            "in": "header",
            "required": true,
            "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
            "schema": {
              "type": "string",
              "default": "2022-12-15.pre"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/ClientError",
            "description": ""
          },
          "5XX": {
            "$ref": "#/components/responses/ServerError",
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "x-klaviyo-ratelimit": {
          "burst": "3/s",
          "steady": "60/m"
        },
        "x-klaviyo-scopes": [
          "Tags Read"
        ],
        "x-klaviyo-pre-release": "BETA"
      }
    }
  },
  "components": {
    "schemas": {
      "ProfileLocation": {
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "latitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "longitude": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "region": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        }
      },
      "GetListTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetSegmentTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "UtmParamInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "EmailTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          },
          "is_tracking_opens": {
            "type": "boolean"
          },
          "is_tracking_clicks": {
            "type": "boolean"
          }
        },
        "required": [
          "add_utm",
          "utm_params",
          "is_tracking_opens",
          "is_tracking_clicks"
        ]
      },
      "SMSTrackingOptions": {
        "type": "object",
        "properties": {
          "add_utm": {
            "type": "boolean"
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UtmParamInfo"
            }
          }
        },
        "required": [
          "add_utm",
          "utm_params"
        ]
      },
      "SendOptions": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean"
          },
          "is_transactional": {
            "type": "boolean"
          }
        },
        "required": [
          "use_smart_sending",
          "is_transactional"
        ]
      },
      "SMSRenderOptions": {
        "type": "object",
        "properties": {
          "shorten_links": {
            "type": "boolean"
          },
          "add_org_prefix": {
            "type": "boolean"
          },
          "add_info_link": {
            "type": "boolean"
          },
          "add_opt_out_language": {
            "type": "boolean"
          }
        },
        "required": [
          "shorten_links",
          "add_org_prefix",
          "add_info_link",
          "add_opt_out_language"
        ]
      },
      "GetFlowTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "EmailMessageContent": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "preview_text": {
            "type": "string"
          },
          "from_email": {
            "type": "string"
          },
          "from_name": {
            "type": "string"
          }
        },
        "required": [
          "subject",
          "preview_text",
          "from_email",
          "from_name"
        ]
      },
      "SMSMessageContent": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "media": {
            "type": "string"
          }
        },
        "required": [
          "body",
          "media"
        ]
      },
      "AudiencesSubObject": {
        "type": "object",
        "properties": {
          "included": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Y6nRLr"
            ],
            "description": "A list of included audiences"
          },
          "excluded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "UTd5ui"
            ],
            "description": "An optional list of excluded audiences"
          }
        }
      },
      "SendOptionsSubObject": {
        "type": "object",
        "properties": {
          "use_smart_sending": {
            "type": "boolean",
            "description": "Use smart sending. Defaults to True"
          },
          "ignore_unsubscribes": {
            "type": "boolean",
            "description": "Ignore unsubscribes. Defaults to False"
          }
        }
      },
      "UTMParamsSubObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "utm_medium",
            "description": "Name of the UTM param"
          },
          "value": {
            "type": "string",
            "example": "campaign",
            "description": "Value of the UTM param. Can be templated data."
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "TrackingOptionsSubObject": {
        "type": "object",
        "properties": {
          "is_tracking_opens": {
            "type": "boolean",
            "description": "Whether the campaign is tracking open events. If not specified, uses company defaults."
          },
          "is_tracking_clicks": {
            "type": "boolean",
            "description": "Whether the campaign is tracking click events. If not specified, uses company defaults."
          },
          "is_add_utm": {
            "type": "boolean",
            "description": "Whether the campaign needs UTM parameters. If set to False, UTM params will not be used."
          },
          "utm_params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UTMParamsSubObject"
            },
            "description": "A list of UTM parameters. If an empty list is given and is_add_utm is True, uses company defaults."
          }
        }
      },
      "StaticScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-12-15T12:00:00",
            "description": "The time to send at"
          },
          "is_local": {
            "type": "boolean",
            "description": "If the campaign should be sent with local recipient timezone send (requires UTC time) or statically sent at the given time. Defaults to False."
          },
          "send_past_recipients_immediately": {
            "type": "boolean",
            "description": "Determines if we should send to local recipient timezone if the given time has passed. Only applicable to local sends. Defaults to False."
          }
        },
        "required": [
          "datetime"
        ]
      },
      "ThrottledScheduleOptions": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2022-12-15T12:00:00",
            "description": "The time to send at"
          },
          "throttle_percentage": {
            "type": "integer",
            "example": 10,
            "description": "The percentage of recipients per hour to send to. Allowed values: [10, 11, 13, 14, 17, 20, 25, 33, 50]"
          }
        },
        "required": [
          "datetime",
          "throttle_percentage"
        ]
      },
      "SendStrategySubObject": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "example": "static",
            "description": "Describes the shape of the options object. Allowed values: ['static', 'throttled', 'immediate']"
          },
          "options_static": {
            "$ref": "#/components/schemas/StaticScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'static' method."
          },
          "options_throttled": {
            "$ref": "#/components/schemas/ThrottledScheduleOptions",
            "description": "The send configuration options the campaign will send with. These define variables that alter the send strategy and must match the given method. Intended to be used with the 'throttled' method."
          }
        },
        "required": [
          "method"
        ]
      },
      "GetCampaignResponseCollectionWithIncludedSection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "campaign"
                  ]
                },
                "id": {
                  "type": "string",
                  "description": "The campaign ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The campaign name"
                    },
                    "status": {
                      "type": "string",
                      "description": "The current status of the campaign"
                    },
                    "archived": {
                      "type": "boolean",
                      "description": "Whether the campaign has been archived or not"
                    },
                    "channel": {
                      "type": "string",
                      "description": "The type of campaign"
                    },
                    "audiences": {
                      "$ref": "#/components/schemas/AudiencesSubObject",
                      "description": "The audiences to be included and/or excluded from the campaign"
                    },
                    "send_options": {
                      "$ref": "#/components/schemas/SendOptionsSubObject",
                      "description": "Options to use when sending a campaign"
                    },
                    "message": {
                      "type": "string",
                      "description": "The id of the message associated with the campaign"
                    },
                    "tracking_options": {
                      "$ref": "#/components/schemas/TrackingOptionsSubObject",
                      "description": "The tracking options associated with the campaign"
                    },
                    "send_strategy": {
                      "$ref": "#/components/schemas/SendStrategySubObject",
                      "description": "The send strategy the campaign will send with"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The datetime when the campaign was created"
                    },
                    "scheduled_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The datetime when the campaign was scheduled for future sending"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The datetime when the campaign was last updated by a user or the system"
                    },
                    "send_time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                    }
                  },
                  "required": [
                    "name",
                    "status",
                    "archived",
                    "channel",
                    "audiences",
                    "send_options",
                    "message",
                    "tracking_options",
                    "send_strategy",
                    "created_at",
                    "scheduled_at",
                    "updated_at",
                    "send_time"
                  ]
                },
                "relationships": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "id"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "tag"
                                ]
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedTags"
            }
          }
        }
      },
      "GetCampaignResponseWithIncludedSection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign"
                ]
              },
              "id": {
                "type": "string",
                "description": "The campaign ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The campaign name"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the campaign"
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the campaign has been archived or not"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The type of campaign"
                  },
                  "audiences": {
                    "$ref": "#/components/schemas/AudiencesSubObject",
                    "description": "The audiences to be included and/or excluded from the campaign"
                  },
                  "send_options": {
                    "$ref": "#/components/schemas/SendOptionsSubObject",
                    "description": "Options to use when sending a campaign"
                  },
                  "message": {
                    "type": "string",
                    "description": "The id of the message associated with the campaign"
                  },
                  "tracking_options": {
                    "$ref": "#/components/schemas/TrackingOptionsSubObject",
                    "description": "The tracking options associated with the campaign"
                  },
                  "send_strategy": {
                    "$ref": "#/components/schemas/SendStrategySubObject",
                    "description": "The send strategy the campaign will send with"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was created"
                  },
                  "scheduled_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was scheduled for future sending"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was last updated by a user or the system"
                  },
                  "send_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "channel",
                  "audiences",
                  "send_options",
                  "message",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "relationships": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "type",
                            "id"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "tag"
                              ]
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncludedTags"
            }
          }
        }
      },
      "ContentSubObject": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "example": "Buy our product!",
            "description": "The subject of the message"
          },
          "preview_text": {
            "type": "string",
            "example": "My preview text",
            "description": "Preview text associated with the message"
          },
          "from_email": {
            "type": "string",
            "example": "store@my-company.com",
            "description": "The email the message should be sent from"
          },
          "from_label": {
            "type": "string",
            "example": "My Company",
            "description": "The label associated with the from_email"
          },
          "template_id": {
            "type": "string",
            "example": "RipRmi",
            "description": "The ID of the template associated to the message"
          },
          "template_name": {
            "type": "string",
            "example": "My email template",
            "description": "The name of the template associated to the message"
          }
        }
      },
      "SendTimeSubObject": {
        "type": "object",
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "description": "The datetime that the message is to be sent"
          },
          "is_local": {
            "type": "boolean",
            "description": "Whether that datetime is to be a local datetime for the recipient"
          }
        },
        "required": [
          "datetime",
          "is_local"
        ]
      },
      "GetCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign-message"
                ]
              },
              "id": {
                "type": "string",
                "description": "The message ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label or name on the message"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel the message is to be sent on"
                  },
                  "content": {
                    "$ref": "#/components/schemas/ContentSubObject",
                    "description": "Additional attributes relating to the content of the message"
                  },
                  "send_times": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "description": "The list of appropriate Send Time Sub-objects associated with the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was last updated"
                  },
                  "campaign_id": {
                    "type": "string",
                    "description": "The parent campaign id"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content",
                  "campaign_id"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetCampaignTagRelationshipListResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetCampaignTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetCampaignSendJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign-send-job"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the send job"
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "ErrorSource": {
        "type": "object",
        "properties": {
          "pointer": {
            "type": "string",
            "example": "/data",
            "default": "/data"
          }
        },
        "required": [
          "pointer"
        ]
      },
      "CatalogJobErrorPayload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          }
        },
        "required": [
          "id",
          "code",
          "title",
          "detail",
          "source"
        ]
      },
      "GetTagResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                  "description": "The Tag ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag",
                      "description": "The Tag name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetTagGroupResponseCollection": {
        "type": "object",
        "required": [
          "data",
          "links"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string",
                  "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                  "description": "The Tag Group ID"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "My Tag Group",
                      "description": "The Tag Group name"
                    },
                    "exclusive": {
                      "type": "boolean",
                      "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                    },
                    "default": {
                      "type": "boolean",
                      "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              },
              "first": {
                "type": "string",
                "format": "uri"
              },
              "last": {
                "type": "string",
                "format": "uri"
              },
              "prev": {
                "type": "string",
                "format": "uri"
              },
              "next": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        }
      },
      "GetTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "GetTagTagGroupRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "GetTagGroupTagRelationshipsResponseCollection": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "title": {
                "type": "string"
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean",
                "example": true,
                "default": true
              }
            },
            "required": [
              "external_id",
              "title",
              "description",
              "sku",
              "inventory_policy",
              "inventory_quantity",
              "price",
              "url"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogVariantCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "integration_type": {
                "type": "string",
                "enum": [
                  "$custom"
                ],
                "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
              },
              "catalog_type": {
                "type": "string",
                "example": "$default",
                "default": "$default"
              }
            },
            "required": [
              "external_id",
              "name"
            ]
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
          }
        }
      },
      "_MetricCreateQuery": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Viewed Product",
            "description": "Name of the event. Must be less than 128 characters."
          },
          "service": {
            "type": "string",
            "description": "This is for advanced usage. For api requests, this should use the default, which is set to api."
          }
        },
        "required": [
          "name"
        ]
      },
      "EventCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "event"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile": {
                "type": "object",
                "example": {
                  "$email": "matt.kemp@klaviyo-demo.com"
                },
                "description": "\nProperties of the profile that triggered this event. The profile must contain an\nidentifier. The $email and/or $phone_number can be used as the identify the profile.\nOther key value pairs can be used to create segments. For example, to create a list of\npeople on trial plans, include a profile's plan type in the profile. The profile\nsupports special fields. The fields include: $email (string), $first_name (string),\n$last_name (string), $phone_number (string), $city (string), $region (string; state or\nother region), $country (string), $zip (string), $image (string; url to a photo of a\nperson), and $consent (list of strings; eg: ['sms', 'email', 'web', 'directmail',\n'mobile']).\n"
              },
              "metric": {
                "$ref": "#/components/schemas/_MetricCreateQuery",
                "example": {
                  "name": "Viewed Product"
                },
                "description": "The associated metric for the event. An account can have up to 200 unique metrics."
              },
              "properties": {
                "type": "object",
                "example": {
                  "Brand": "Kids Book",
                  "Categories": [
                    "Fiction",
                    "Children"
                  ],
                  "ProductID": 1111,
                  "ProductName": "Winnie the Pooh",
                  "$extra": {
                    "URL": "http://www.example.com/path/to/product",
                    "ImageURL": "http://www.example.com/path/to/product/image.png"
                  }
                },
                "description": "\n Properties of this event. Any top level property (that are not objects) can be\nused to create segments. The $extra property is a special property. This records any\nnon-segmentable values that can be references later. For example, HTML templates are\nuseful on a segment, but itself is not used in creating a segment. There are limits\nplaced onto the size of the data present. This must not exceed 5 MB. This must not\nexceed 300 event properties. A single string cannot be larger than 100 KB. Each array\nmust not exceed 4000 elements. The properties cannot contain more than 10 nested levels.\n"
              },
              "time": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00",
                "description": "\nWhen this event occurred. By default, the time the request was received will be used.\nThe time is truncated to the second. The time must be after the year 2000 and can only\nbe up to 1 year in the future.\n"
              },
              "value": {
                "type": "number",
                "example": 9.99,
                "description": "A numeric value to associate with this event. For example, the dollar amount of a purchase."
              },
              "unique_id": {
                "type": "string",
                "description": "\nA unique identifier for an event. If the unique_id is repeated for the same\nprofile and metric, only the first processed event will be recorded. If this is not\npresent, this will use the time to the second. Using the default, this limits only one\nevent per profile per second.\n"
              }
            },
            "required": [
              "profile",
              "metric",
              "properties"
            ]
          }
        }
      },
      "EventCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/EventCreateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric-aggregate"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "metric_id": {
                "type": "string",
                "example": "0rG4eQ",
                "description": "The metric ID used in the aggregation. A metric ID is the `id` field for a metric, as returned by the [Get Metrics endpoint](https://developers.klaviyo.com/en/reference/get_metrics)."
              },
              "measurements": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "count",
                    "sum_value",
                    "unique"
                  ],
                  "description": "Supported measurements for aggregation"
                },
                "example": "count",
                "description": "Measurement key, e.g. `unique`, `sum_value`, `count`"
              },
              "interval": {
                "type": "string",
                "enum": [
                  "day",
                  "hour",
                  "month",
                  "week"
                ],
                "description": "Aggregation interval, e.g. \"hour\", \"day\", \"week\", \"month\"",
                "example": "day"
              },
              "page_size": {
                "type": "integer",
                "example": 500,
                "default": 500,
                "description": "Alter the maximum number of returned rows in a single page of aggregation results"
              },
              "by": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "$attributed_channel",
                    "$attributed_flow",
                    "$attributed_message",
                    "$attributed_variation",
                    "$campaign_channel",
                    "$flow",
                    "$flow_channel",
                    "$message",
                    "$message_send_cohort",
                    "$variation",
                    "$variation_send_cohort",
                    "Bounce Type",
                    "Campaign Name",
                    "Client Canonical",
                    "Client Name",
                    "Client Type",
                    "Email Domain",
                    "Failure Source",
                    "Failure Type",
                    "From Number",
                    "From Phone Region",
                    "List",
                    "Message Name",
                    "Message Type",
                    "Method",
                    "Subject",
                    "To Number",
                    "To Phone Region",
                    "URL",
                    "form_id"
                  ],
                  "description": "Supported dimensions for grouping and filtering"
                },
                "example": "$message",
                "description": "Optional attribute(s) used for partitioning by the aggregation function"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              },
              "filter": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "greater-or-equal(datetime,2022-12-01T00:00:00)",
                  "less-than(datetime,2022-12-08T00:00:00"
                ],
                "description": "List of filters, must include time range using ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm).\n            These filters follow a similar format to those in `GET` requests, the primary difference is that this endpoint asks for a list.\n            The time range can be filtered by providing a `greater_or_equal` and a `less-than` filter on the `datetime` field."
              },
              "timezone": {
                "type": "string",
                "example": "America/New_York",
                "default": "UTC",
                "description": "The timezone used for processing the query, e.g. `'America/New_York'`.\n            This field is validated against a list of common timezones from the [IANA Time Zone Database](https://www.iana.org/time-zones).\n            While most are supported, a few notable exceptions are `Factory`, `Europe/Kyiv` and `Pacific/Kanton`. This field is case-sensitive."
              }
            },
            "required": [
              "metric_id",
              "measurements",
              "interval",
              "filter"
            ]
          }
        }
      },
      "MetricAggregateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MetricAggregateQueryAsSubResource"
          }
        }
      },
      "MetricAggregateRowDTO": {
        "type": "object",
        "properties": {
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of dimensions associated with this set of measurements"
          },
          "measurements": {
            "type": "object",
            "description": "Dictionary of measurement_key, values"
          }
        },
        "required": [
          "dimensions",
          "measurements"
        ]
      },
      "ListCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListCreateQueryAsSubResource"
          }
        }
      },
      "ProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfileCreateQueryAsSubResource"
          }
        }
      },
      "CampaignCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "channel": {
                "type": "string",
                "example": "email",
                "description": "The type of campaign (email or sms, for example)"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with. Defaults to 'Immediate' send strategy."
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              }
            },
            "required": [
              "name",
              "channel",
              "audiences",
              "send_strategy",
              "send_options"
            ]
          }
        }
      },
      "CampaignCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCreateQueryAsSubResource"
          }
        }
      },
      "PostCampaignResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign"
                ]
              },
              "id": {
                "type": "string",
                "description": "The campaign ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The campaign name"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the campaign"
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the campaign has been archived or not"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The type of campaign"
                  },
                  "audiences": {
                    "$ref": "#/components/schemas/AudiencesSubObject",
                    "description": "The audiences to be included and/or excluded from the campaign"
                  },
                  "send_options": {
                    "$ref": "#/components/schemas/SendOptionsSubObject",
                    "description": "Options to use when sending a campaign"
                  },
                  "message": {
                    "type": "string",
                    "description": "The id of the message associated with the campaign"
                  },
                  "tracking_options": {
                    "$ref": "#/components/schemas/TrackingOptionsSubObject",
                    "description": "The tracking options associated with the campaign"
                  },
                  "send_strategy": {
                    "$ref": "#/components/schemas/SendStrategySubObject",
                    "description": "The send strategy the campaign will send with"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was created"
                  },
                  "scheduled_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was scheduled for future sending"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was last updated by a user or the system"
                  },
                  "send_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "channel",
                  "audiences",
                  "send_options",
                  "message",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The campaign ID to be cloned"
              },
              "new_name": {
                "type": "string",
                "example": "My cloned campaign's new name",
                "description": "The name for the new cloned campaign"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignCloneQueryAsSubResource"
          }
        }
      },
      "CampaignMessageAssignTemplateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The message ID to be assigned to"
              },
              "template_id": {
                "type": "string",
                "example": "RipRmi",
                "description": "The template ID to assign"
              }
            },
            "required": [
              "id",
              "template_id"
            ]
          }
        }
      },
      "CampaignMessageAssignTemplateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessageAssignTemplateQueryAsSubResource"
          }
        }
      },
      "PostCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign-message"
                ]
              },
              "id": {
                "type": "string",
                "description": "The message ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label or name on the message"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel the message is to be sent on"
                  },
                  "content": {
                    "$ref": "#/components/schemas/ContentSubObject",
                    "description": "Additional attributes relating to the content of the message"
                  },
                  "send_times": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "description": "The list of appropriate Send Time Sub-objects associated with the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was last updated"
                  },
                  "campaign_id": {
                    "type": "string",
                    "description": "The parent campaign id"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content",
                  "campaign_id"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignSendJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "CampaignSendJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobCreateQueryAsSubResource"
          }
        }
      },
      "PostCampaignSendJobResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign-send-job"
                ]
              },
              "id": {
                "type": "string",
                "description": "The ID of the campaign to send"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "The status of the send job"
                  }
                },
                "required": [
                  "status"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TemplateCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "editor_type": {
                "type": "string",
                "description": "Restricted to CODE"
              },
              "html": {
                "type": "string",
                "example": "\n            <html>\n                <body>\n                    hello world\n                </body>\n            </html>\n        ",
                "description": "The HTML contents of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext version of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "name",
              "editor_type"
            ]
          }
        }
      },
      "TemplateCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCreateQueryAsSubResource"
          }
        }
      },
      "TemplateRenderQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template"
              },
              "context": {
                "type": "object",
                "example": {
                  "first_name": "Jane",
                  "last_name": "Smith"
                },
                "description": "The context for the template render. This must be a JSON object which has values for any tags used in the template. See [this doc](https://help.klaviyo.com/hc/en-us/articles/115005084927-Template-tags-and-variable-syntax-reference-classic-editor-) for more details."
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            },
            "required": [
              "id",
              "context"
            ]
          }
        }
      },
      "TemplateRenderQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateRenderQueryAsSubResource"
          }
        }
      },
      "TemplateCloneQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "id": {
            "description": "The ID of MessageTemplate"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of template to be cloned"
              },
              "name": {
                "type": "string",
                "example": "Clone of Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Any subset of TemplateResponse fields"
              }
            },
            "required": [
              "id"
            ]
          }
        }
      },
      "TemplateCloneQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateCloneQueryAsSubResource"
          }
        }
      },
      "CatalogItemCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogItemDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "items"
            ]
          }
        }
      },
      "CatalogItemDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "variants": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogVariantDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "variants"
            ]
          }
        }
      },
      "CatalogVariantDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-update-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryUpdateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category-bulk-delete-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CatalogCategoryDeleteQueryAsSubResource"
                }
              }
            },
            "required": [
              "categories"
            ]
          }
        }
      },
      "CatalogCategoryDeleteJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryAsSubResource"
          }
        }
      },
      "TagCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              },
              "tag_group_id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The ID of the Tag Group to associate the Tag with. If this field is not specified, the Tag will be associated with the company's Default Tag Group."
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagCreateQueryAsSubResource"
          }
        }
      },
      "PostTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagGroupCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "exclusive": {
                "type": "boolean"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupCreateQueryAsSubResource"
          }
        }
      },
      "PostTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagSegmentOp": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "id"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "segment"
                  ]
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Suppression": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email of the profile to suppress / unsuppress."
          }
        },
        "required": [
          "email"
        ]
      },
      "SuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-suppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be created."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "SuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsuppressionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsuppression-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "suppressions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Suppression"
                },
                "description": "One or more suppressions to be removed."
              }
            },
            "required": [
              "suppressions"
            ]
          }
        }
      },
      "UnsuppressionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        }
      },
      "SubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-subscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "The list to add the newly subscribed profiles to"
              },
              "custom_source": {
                "type": "string",
                "description": "A custom method detail or source to store on the consent records."
              },
              "subscriptions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Subscription"
                },
                "description": "One or more subscriptions to be created."
              }
            },
            "required": [
              "list_id",
              "subscriptions"
            ]
          }
        }
      },
      "SubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "UnsubscriptionCreateJobCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile-unsubscription-bulk-create-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "description": "Optional, the list to remove the profiles from"
              },
              "emails": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The emails to unsubscribe if any."
              },
              "phone_numbers": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The phone numbers to unsubscribe if any."
              }
            }
          }
        }
      },
      "UnsubscriptionCreateJobCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryAsSubResource"
          }
        }
      },
      "DataPrivacyCreateDeletionJobQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "data-privacy-deletion-job"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "profile_id": {
                "type": "string",
                "example": "01F2VWQ645BES947MP1BPAKVMB",
                "description": "The profile ID of the profile to delete. This is the `id` field on the profile, as it is returned by the [Get Profiles endpoint](https://developers.klaviyo.com/en/reference/get_profiles)."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "The email address of the profile to delete."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "The phone number of the profile to delete."
              }
            }
          }
        }
      },
      "DataPrivacyCreateDeletionJobQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryAsSubResource"
          }
        }
      },
      "OnsiteSubscriptionCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "subscription"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "list_id": {
                "type": "string",
                "example": "Y6nRLr",
                "description": "The list ID to add the newly subscribed profile to."
              },
              "custom_source": {
                "type": "string",
                "example": "Homepage footer signup form",
                "description": "A custom method detail or source to store on the consent records for this subscription."
              },
              "email": {
                "type": "string",
                "example": "matt.kemp@klaviyo-demo.com",
                "description": "Email address to create subscription and email consent record for."
              },
              "phone_number": {
                "type": "string",
                "example": "+15005550006",
                "description": "Phone number to create subscription and SMS consent record for, in E.164 format."
              },
              "properties": {
                "type": "object",
                "example": {
                  "first_name": "Matt",
                  "last_name": "Kemp",
                  "favorite_color": "Blue"
                },
                "description": "Profile properties to set on the newly subscribed profile."
              }
            },
            "required": [
              "list_id"
            ]
          }
        }
      },
      "OnsiteSubscriptionCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryAsSubResource"
          }
        }
      },
      "_OnsiteProfileMetaIdentifiers": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "external_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "anonymous_id": {
            "type": "string"
          },
          "_kx": {
            "type": "string"
          }
        }
      },
      "_OnsiteProfileMeta": {
        "type": "object",
        "properties": {
          "identifiers": {
            "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
          }
        },
        "required": [
          "identifiers"
        ]
      },
      "OnsiteProfileCreateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object"
              }
            }
          },
          "meta": {
            "$ref": "#/components/schemas/_OnsiteProfileMeta"
          }
        }
      },
      "OnsiteProfileCreateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/OnsiteProfileCreateQueryAsSubResource"
          }
        }
      },
      "CatalogItemUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-category"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogItemUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
          }
        }
      },
      "CatalogVariantUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "CatalogVariantUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
          }
        }
      },
      "CatalogCategoryUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "relationships": {
            "type": "object",
            "properties": {
              "items": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "id"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "catalog-item"
                          ]
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogCategoryUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
          }
        }
      },
      "ListPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "ListPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ListPartialUpdateQueryAsSubResource"
          }
        }
      },
      "SegmentPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "SegmentPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/SegmentPartialUpdateQueryAsSubResource"
          }
        }
      },
      "ProfilePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProfilePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ProfilePartialUpdateQueryAsSubResource"
          }
        }
      },
      "FlowUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              }
            },
            "required": [
              "status"
            ]
          }
        }
      },
      "FlowUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/FlowUpdateQueryAsSubResource"
          }
        }
      },
      "CampaignPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign"
            ]
          },
          "id": {
            "type": "string",
            "description": "The campaign ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My new campaign",
                "description": "The campaign name"
              },
              "audiences": {
                "$ref": "#/components/schemas/AudiencesSubObject",
                "description": "The audiences to be included and/or excluded from the campaign"
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptionsSubObject",
                "description": "Options to use when sending a campaign"
              },
              "tracking_options": {
                "$ref": "#/components/schemas/TrackingOptionsSubObject",
                "description": "The tracking options associated with the campaign"
              },
              "send_strategy": {
                "$ref": "#/components/schemas/SendStrategySubObject",
                "description": "The send strategy the campaign will send with"
              }
            }
          }
        }
      },
      "CampaignPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignPartialUpdateQueryAsSubResource"
          }
        }
      },
      "PatchCampaignResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign"
                ]
              },
              "id": {
                "type": "string",
                "description": "The campaign ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The campaign name"
                  },
                  "status": {
                    "type": "string",
                    "description": "The current status of the campaign"
                  },
                  "archived": {
                    "type": "boolean",
                    "description": "Whether the campaign has been archived or not"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The type of campaign"
                  },
                  "audiences": {
                    "$ref": "#/components/schemas/AudiencesSubObject",
                    "description": "The audiences to be included and/or excluded from the campaign"
                  },
                  "send_options": {
                    "$ref": "#/components/schemas/SendOptionsSubObject",
                    "description": "Options to use when sending a campaign"
                  },
                  "message": {
                    "type": "string",
                    "description": "The id of the message associated with the campaign"
                  },
                  "tracking_options": {
                    "$ref": "#/components/schemas/TrackingOptionsSubObject",
                    "description": "The tracking options associated with the campaign"
                  },
                  "send_strategy": {
                    "$ref": "#/components/schemas/SendStrategySubObject",
                    "description": "The send strategy the campaign will send with"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was created"
                  },
                  "scheduled_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was scheduled for future sending"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign was last updated by a user or the system"
                  },
                  "send_time": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The datetime when the campaign will be / was sent or None if not yet scheduled by a send_job."
                  }
                },
                "required": [
                  "name",
                  "status",
                  "archived",
                  "channel",
                  "audiences",
                  "send_options",
                  "message",
                  "tracking_options",
                  "send_strategy",
                  "created_at",
                  "scheduled_at",
                  "updated_at",
                  "send_time"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-message"
            ]
          },
          "id": {
            "type": "string",
            "description": "The message ID to be retrieved"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "example": "My message name",
                "description": "The label or name on the message"
              },
              "content": {
                "$ref": "#/components/schemas/ContentSubObject",
                "description": "Additional attributes relating to the content of the message"
              }
            }
          }
        }
      },
      "CampaignMessagePartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryAsSubResource"
          }
        }
      },
      "PatchCampaignMessageResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "campaign-message"
                ]
              },
              "id": {
                "type": "string",
                "description": "The message ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The label or name on the message"
                  },
                  "channel": {
                    "type": "string",
                    "description": "The channel the message is to be sent on"
                  },
                  "content": {
                    "$ref": "#/components/schemas/ContentSubObject",
                    "description": "Additional attributes relating to the content of the message"
                  },
                  "send_times": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SendTimeSubObject"
                    },
                    "description": "The list of appropriate Send Time Sub-objects associated with the message"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was created"
                  },
                  "updated_at": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-08T00:00:00",
                    "description": "The datetime when the message was last updated"
                  },
                  "campaign_id": {
                    "type": "string",
                    "description": "The parent campaign id"
                  }
                },
                "required": [
                  "label",
                  "channel",
                  "content",
                  "campaign_id"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CampaignSendJobPartialUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "campaign-send-job"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of the currently sending campaign to cancel or revert"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "example": "cancel",
                "description": "The action you would like to take with this send job from among 'cancel' and 'revert'"
              }
            },
            "required": [
              "action"
            ]
          }
        }
      },
      "CampaignSendJobPartialUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryAsSubResource"
          }
        }
      },
      "TemplateUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "template"
            ]
          },
          "id": {
            "type": "string",
            "description": "The ID of template"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Monthly Newsletter Template",
                "description": "The name of the template"
              },
              "html": {
                "type": "string",
                "example": "\n              <html>\n                  <body>\n                      hello world\n                  </body>\n              </html>\n          ",
                "description": "The HTML of the template"
              },
              "text": {
                "type": "string",
                "example": "hello world",
                "description": "The plaintext of the template"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Provide fields to limit the returned data"
              }
            }
          }
        }
      },
      "TemplateUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateUpdateQueryAsSubResource"
          }
        }
      },
      "TagUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagUpdateQueryAsSubResource"
          }
        }
      },
      "PatchTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "TagGroupUpdateQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id",
          "attributes"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag-group"
            ]
          },
          "id": {
            "type": "string",
            "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
            "description": "The Tag Group ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag Group",
                "description": "The Tag Group name"
              },
              "return_fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      },
      "TagGroupUpdateQuery": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TagGroupUpdateQueryAsSubResource"
          }
        }
      },
      "PatchTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "CatalogItemDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-item"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog item ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "CatalogVariantDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog variant ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "CatalogCategoryDeleteQueryAsSubResource": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-category"
            ]
          },
          "id": {
            "type": "string",
            "description": "The catalog category ID is a compound ID (string), with format: `${integration}:::${catalog}:::${external_id}`. Currently, the only supported integration type is `$custom`, and the only supported catalog is `$default`, but support for multiple catalogs  & non-custom integrations is forthcoming."
          }
        }
      },
      "DeleteTagResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag"
                ]
              },
              "id": {
                "type": "string",
                "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
                "description": "The Tag ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag",
                    "description": "The Tag name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "DeleteTagGroupResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "type",
              "id",
              "attributes",
              "links"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "tag-group"
                ]
              },
              "id": {
                "type": "string",
                "example": "zyxw9876-vu54-ts32-rq10-zyxwvu654321",
                "description": "The Tag Group ID"
              },
              "attributes": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "My Tag Group",
                    "description": "The Tag Group name"
                  },
                  "exclusive": {
                    "type": "boolean",
                    "description": "If a tag group is non-exclusive, any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, any given related resource can only be linked to one tag from that tag group."
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Every company automatically has one Default Tag Group. The Default Tag Group cannot be deleted, and no other Default Tag Groups can be created. This value is true for the Default Tag Group and false for all other Tag Groups."
                  }
                },
                "required": [
                  "name",
                  "exclusive",
                  "default"
                ]
              },
              "links": {
                "type": "object",
                "properties": {
                  "self": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "self"
                ]
              }
            }
          }
        }
      },
      "IncludedVariants": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "catalog-variant"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "external_id": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "inventory_policy": {
                "type": "integer",
                "enum": [
                  0,
                  1,
                  2
                ],
                "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
              },
              "inventory_quantity": {
                "type": "number"
              },
              "price": {
                "type": "number"
              },
              "url": {
                "type": "string"
              },
              "image_full_url": {
                "type": "string"
              },
              "image_thumbnail_url": {
                "type": "string"
              },
              "images": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "custom_metadata": {
                "type": "object"
              },
              "published": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedMetrics": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "metric"
            ]
          },
          "id": {
            "type": "string",
            "description": "The Metric ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the metric"
              },
              "created": {
                "type": "string",
                "description": "Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "updated": {
                "type": "string",
                "description": "Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)"
              },
              "integration": {
                "type": "object",
                "description": "The integration associated with the event"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedProfiles": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedTags": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tag"
            ]
          },
          "id": {
            "type": "string",
            "example": "abcd1234-ef56-gh78-ij90-abcdef123456",
            "description": "The Tag ID"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "My Tag",
                "description": "The Tag name"
              }
            },
            "required": [
              "name"
            ]
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedLists": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "list"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedSegments": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "segment"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedProfile": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "profile"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "phone_number": {
                "type": "string"
              },
              "external_id": {
                "type": "string"
              },
              "anonymous_id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "organization": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "image": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "last_event_date": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "location": {
                "$ref": "#/components/schemas/ProfileLocation"
              },
              "properties": {
                "type": "object"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowActions": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-action"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowMessages": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-message"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "channel": {
                "type": "string"
              },
              "content": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailMessageContent"
                  },
                  {
                    "$ref": "#/components/schemas/SMSMessageContent"
                  }
                ]
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              }
            },
            "required": [
              "name",
              "channel",
              "content"
            ]
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlows": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "archived": {
                "type": "boolean"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "trigger_type": {
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "IncludedFlowAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "flow-action"
            ]
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "action_type": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "created": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "updated": {
                "type": "string",
                "format": "date-time",
                "example": "2022-11-08T00:00:00"
              },
              "settings": {
                "type": "object"
              },
              "tracking_options": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EmailTrackingOptions"
                  },
                  {
                    "$ref": "#/components/schemas/SMSTrackingOptions"
                  }
                ]
              },
              "send_options": {
                "$ref": "#/components/schemas/SendOptions"
              },
              "render_options": {
                "$ref": "#/components/schemas/SMSRenderOptions"
              }
            }
          },
          "links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "self"
            ]
          }
        },
        "required": [
          "type",
          "id",
          "attributes",
          "links"
        ]
      },
      "V2TemplateRenderQueryAsSubResource": {
        "properties": {
          "id": {
            "description": "The ID of MessageTemplate"
          }
        },
        "required": [
          "id"
        ]
      }
    },
    "responses": {
      "ClientError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Client Error"
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "code",
                      "title",
                      "detail"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "detail": {
                        "type": "string"
                      },
                      "source": {
                        "type": "object",
                        "properties": {
                          "pointer": {
                            "type": "string"
                          },
                          "parameter": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Server Error"
      }
    },
    "securitySchemes": {
      "Klaviyo-API-Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2022-12-15.pre/reference/api-overview#authentication",
        "x-default": "Klaviyo-API-Key your-private-api-key"
      }
    }
  },
  "servers": [
    {
      "url": "https://a.klaviyo.com",
      "description": "Production"
    }
  ],
  "security": [
    {
      "Klaviyo-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Campaigns",
      "description": "campaigns"
    },
    {
      "name": "Catalogs",
      "description": "catalogs"
    },
    {
      "name": "Events",
      "description": "events"
    },
    {
      "name": "Flows",
      "description": "flows"
    },
    {
      "name": "Lists",
      "description": "lists"
    },
    {
      "name": "Metrics",
      "description": "metrics"
    },
    {
      "name": "Profiles",
      "description": "profiles"
    },
    {
      "name": "Segments",
      "description": "segments"
    },
    {
      "name": "Subscriptions",
      "description": "subscriptions"
    },
    {
      "name": "Tags",
      "description": "tags"
    },
    {
      "name": "Templates",
      "description": "templates"
    },
    {
      "name": "Data Privacy",
      "description": "data privacy"
    }
  ],
  "x-readme": {
    "explorer-enabled": false,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
