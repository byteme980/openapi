{
    "openapi": "3.0.2",
    "info": {
      "title": "Klaviyo API (Beta)",
      "version": "2022-11-14.pre",
      "description": "The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.",
      "contact": {
        "name": "Klaviyo Developer Experience Team",
        "email": "developers@klaviyo.com",
        "url": "https://developers.klaviyo.com"
      },
      "termsOfService": "https://www.klaviyo.com/legal/api-terms",
      "license": {
        "name": "License",
        "url": "https://www.klaviyo.com/legal"
      }
    },
    "paths": {
      "/api/data-privacy-deletion-jobs/": {
        "post": {
          "operationId": "create_data_privacy_deletion_job",
          "summary": "Create Data Privacy Deletion Job",
          "description": "Request a data privacy-compliant deletion for the person record corresponding to email address, phone number or person identifier<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Data Privacy Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "202": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Data Privacy"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Data Privacy Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQuery"
                }
              }
            }
          }
        }
      },
      "/api/flows/{flow_id}/tags/": {
        "get": {
          "operationId": "get_flow_tags",
          "summary": "Get Flow Tags",
          "description": "Return all tags that belong to the given flow.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Tags Read`",
          "parameters": [
            {
              "name": "flow_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[tag]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFlowTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Flows"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read",
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      },
      "/api/lists/{list_id}/tags/": {
        "get": {
          "operationId": "get_list_tags",
          "summary": "Get List Tags",
          "description": "Return all tags associated with the given list ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`List Read`\n`Tags Read`",
          "parameters": [
            {
              "name": "list_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[tag]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetListTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Lists"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "List Read",
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      },
      "/api/segments/{segment_id}/tags/": {
        "get": {
          "operationId": "get_segment_tags",
          "summary": "Get Segment Tags",
          "description": "Returns all tags that belong to the given segment<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Segments Read`\n`Tags Read`",
          "parameters": [
            {
              "name": "segment_id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[tag]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetSegmentTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Segments"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Segments Read",
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      },
      "/api/tags/": {
        "get": {
          "operationId": "get_tags",
          "summary": "Get Tags",
          "description": "List all tags in an account.\nTags can be filtered by `name`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 50 tags per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
          "parameters": [
            {
              "name": "fields[tag]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        },
        "post": {
          "operationId": "create_tag",
          "summary": "Create Tag",
          "description": "Create a tag. An account cannot have more than **500** unique tags.\nA tag belongs to a single tag group. If the `tag_group_id` is not specified, the tag is added to the account's default tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/tags/{id}/": {
        "get": {
          "operationId": "get_tag",
          "summary": "Get Tag",
          "description": "Retrieve the tag with the given ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[tag]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        },
        "patch": {
          "operationId": "update_tag",
          "summary": "Update Tag",
          "description": "Update the tag with the given ID.\nOnly a tag's `name` can be changed. A tag cannot be moved from one tag group to another.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_tag",
          "summary": "Delete Tag",
          "description": "Delete the tag with the given ID. Any associations between the tag and other resources will also be removed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTagResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      },
      "/api/tag-groups/": {
        "get": {
          "operationId": "get_tag_groups",
          "summary": "Get Tag Groups",
          "description": "List all tag groups in an account. Every account has one default tag group.\nTag groups can be filtered by `name`, `exclusive`, and `default`, and sorted by `name` or `id` in ascending or descending order.\nReturns a maximum of 25 tag groups per request, which can be paginated with [cursor-based pagination](https://developers.klaviyo.com/en/v2022-10-17/reference/api_overview#pagination).<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
          "parameters": [
            {
              "name": "fields[tag-group]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`name`: `contains`, `ends-with`, `equals`, `starts-with`<br>`exclusive`: `equals`<br>`default`: `equals`",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page[cursor]",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#pagination"
            },
            {
              "name": "sort",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "-id",
                  "name",
                  "-name"
                ]
              },
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sorting"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        },
        "post": {
          "operationId": "create_tag_group",
          "summary": "Create Tag Group",
          "description": "Create a tag group. An account cannot have more than **50** unique tag groups.\nIf `exclusive` is not specified, the tag group defaults to being non-exclusive.\nIf a tag group is non-exclusive, then any given related resource (campaign, flow, etc.) can be linked to multiple tags from that tag group. If a tag group is exclusive, then any given related resource can only be linked to one tag from that tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PostTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupCreateQuery"
                }
              }
            }
          }
        }
      },
      "/api/tag-groups/{id}/": {
        "get": {
          "operationId": "get_tag_group",
          "summary": "Get Tag Group",
          "description": "Retrieve the tag group with the given ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "fields[tag-group]",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                }
              },
              "in": "query",
              "explode": false,
              "description": "For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#sparse-fieldsets"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        },
        "patch": {
          "operationId": "update_tag_group",
          "summary": "Update Tag Group",
          "description": "Update the tag group with the given ID.\nOnly a tag group's `name` can be changed. A tag group's `exclusive` or `default` value cannot be changed.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PatchTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagGroupUpdateQuery"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_tag_group",
          "summary": "Delete Tag Group",
          "description": "Delete the tag group with the given ID. Any tags inside that tag group, and any associations between those tags and other resources, will also be removed. The default tag group cannot be deleted.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/DeleteTagGroupResponse"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      },
      "/api/tags/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_tag_relationships",
          "summary": "Get Tag Relationships",
          "description": "Get the relationships for a tag.\nIf `related_resource` is `tag-group`, the request will return the ID of the tag group to which the tag belongs.\nIf `related_resource` is set to `campaigns`, `flows`, `lists`, or `segments`, the request will return the IDs of all resources of that type that have been associated with the tag.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Read`\n`Lists Read`\n`Segments Read`\n`Tags Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flows",
                  "lists",
                  "segments",
                  "tag-groups"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagTagGroupRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Read",
            "Lists Read",
            "Segments Read",
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        },
        "post": {
          "operationId": "create_tag_relationships",
          "summary": "Create Tag Relationships",
          "description": "Associate a tag with other resources. Any given resource cannot be associated with more than **100** tags.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) that will be associated with the tag.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flows",
                  "lists",
                  "segments",
                  "tag-groups"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Write",
            "Lists Write",
            "Segments Write",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagSegmentOp"
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "delete_tag_relationships",
          "summary": "Delete Tag Relationships",
          "description": "Remove a tag's association with other resources.\nThe `related_resource` can be one of `campaigns`, `flows`, `lists`, or `segments`.\nUse the request body to pass in the ID(s) of the related resource(s) whose association with the tag will be removed.\nThe scopes listed below are conditionally required depending on the specified related resource.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Flows Write`\n`Lists Write`\n`Segments Write`\n`Tags Write`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "flows",
                  "lists",
                  "segments",
                  "tag-groups"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "204": {
              "description": ""
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Flows Write",
            "Lists Write",
            "Segments Write",
            "Tags Write"
          ],
          "x-klaviyo-pre-release": "BETA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagSegmentOp"
                }
              }
            }
          }
        }
      },
      "/api/tag-groups/{id}/relationships/{related_resource}/": {
        "get": {
          "operationId": "get_tag_group_relationships",
          "summary": "Get Tag Group Relationships",
          "description": "When `related_resource` is `tags`, returns the IDs of all tags inside the given tag group.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`\n\n**Scopes:**\n`Tags Read`",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "description": "",
              "schema": {
                "type": "string"
              },
              "in": "path"
            },
            {
              "name": "related_resource",
              "required": true,
              "description": "",
              "schema": {
                "type": "string",
                "enum": [
                  "tags"
                ]
              },
              "in": "path"
            },
            {
              "name": "revision",
              "in": "header",
              "required": true,
              "description": "API endpoint revision (format: YYYY-MM-DD[.suffix])",
              "schema": {
                "type": "string",
                "default": "2022-11-14.pre"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetTagGroupTagRelationshipsResponseCollection"
                  }
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/ClientError",
              "description": ""
            },
            "5XX": {
              "$ref": "#/components/responses/ServerError",
              "description": ""
            }
          },
          "tags": [
            "Tags"
          ],
          "x-klaviyo-ratelimit": {
            "burst": "3/s",
            "steady": "60/m"
          },
          "x-klaviyo-scopes": [
            "Tags Read"
          ],
          "x-klaviyo-pre-release": "BETA"
        }
      }
    },
    "components": {
      "schemas": {
        "ProfileLocation": {
          "type": "object",
          "properties": {
            "address1": {
              "type": "string"
            },
            "address2": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "latitude": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "longitude": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "region": {
              "type": "string"
            },
            "zip": {
              "type": "string"
            },
            "timezone": {
              "type": "string"
            }
          }
        },
        "GetListTagResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetSegmentTagResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "UtmParamInfo": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "EmailTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            },
            "is_tracking_opens": {
              "type": "boolean"
            },
            "is_tracking_clicks": {
              "type": "boolean"
            }
          },
          "required": [
            "add_utm",
            "utm_params",
            "is_tracking_opens",
            "is_tracking_clicks"
          ]
        },
        "SMSTrackingOptions": {
          "type": "object",
          "properties": {
            "add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UtmParamInfo"
              }
            }
          },
          "required": [
            "add_utm",
            "utm_params"
          ]
        },
        "SendOptions": {
          "type": "object",
          "properties": {
            "use_smart_sending": {
              "type": "boolean"
            },
            "is_transactional": {
              "type": "boolean"
            }
          },
          "required": [
            "use_smart_sending",
            "is_transactional"
          ]
        },
        "SMSRenderOptions": {
          "type": "object",
          "properties": {
            "shorten_links": {
              "type": "boolean"
            },
            "add_org_prefix": {
              "type": "boolean"
            },
            "add_info_link": {
              "type": "boolean"
            },
            "add_opt_out_language": {
              "type": "boolean"
            }
          },
          "required": [
            "shorten_links",
            "add_org_prefix",
            "add_info_link",
            "add_opt_out_language"
          ]
        },
        "GetFlowTagResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "EmailMessageContent": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string"
            },
            "preview_text": {
              "type": "string"
            },
            "from_email": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            }
          },
          "required": [
            "subject",
            "preview_text",
            "from_email",
            "from_name"
          ]
        },
        "SMSMessageContent": {
          "type": "object",
          "properties": {
            "body": {
              "type": "string"
            },
            "media": {
              "type": "string"
            }
          },
          "required": [
            "body",
            "media"
          ]
        },
        "AudiencesSubObject": {
          "type": "object",
          "properties": {
            "included": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "excluded": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "SendOptionsSubObject": {
          "type": "object",
          "properties": {
            "use_smart_sending": {
              "type": "boolean"
            },
            "ignore_unsubscribes": {
              "type": "boolean"
            }
          }
        },
        "UTMParamsSubObject": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "value"
          ]
        },
        "TrackingOptionsSubObject": {
          "type": "object",
          "properties": {
            "is_tracking_opens": {
              "type": "boolean"
            },
            "is_tracking_clicks": {
              "type": "boolean"
            },
            "is_add_utm": {
              "type": "boolean"
            },
            "utm_params": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UTMParamsSubObject"
              }
            }
          }
        },
        "StaticScheduleOptions": {
          "type": "object",
          "properties": {
            "datetime": {
              "type": "string",
              "format": "date-time"
            },
            "is_local": {
              "type": "boolean"
            },
            "send_past_recipients_immediately": {
              "type": "boolean"
            }
          },
          "required": [
            "datetime",
            "is_local"
          ]
        },
        "ThrottledScheduleOptions": {
          "type": "object",
          "properties": {
            "datetime": {
              "type": "string",
              "format": "date-time"
            },
            "throttle_percentage": {
              "type": "integer"
            }
          },
          "required": [
            "datetime",
            "throttle_percentage"
          ]
        },
        "SendStrategySubObject": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string"
            },
            "options": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/StaticScheduleOptions"
                },
                {
                  "$ref": "#/components/schemas/ThrottledScheduleOptions"
                }
              ]
            }
          },
          "required": [
            "method"
          ]
        },
        "ContentSubObject": {
          "type": "object",
          "properties": {
            "subject": {
              "type": "string"
            },
            "preview_text": {
              "type": "string"
            },
            "from_email": {
              "type": "string"
            },
            "from_label": {
              "type": "string"
            },
            "template_id": {
              "type": "string"
            }
          }
        },
        "SendTimeSubObject": {
          "type": "object",
          "properties": {
            "datetime": {
              "type": "string",
              "format": "date-time"
            },
            "is_local": {
              "type": "boolean"
            }
          },
          "required": [
            "datetime",
            "is_local"
          ]
        },
        "GetCampaignTagResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "ErrorSource": {
          "type": "object",
          "properties": {
            "pointer": {
              "type": "string"
            }
          },
          "required": [
            "pointer"
          ]
        },
        "CatalogJobErrorPayload": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "detail": {
              "type": "string"
            },
            "source": {
              "$ref": "#/components/schemas/ErrorSource"
            }
          },
          "required": [
            "id",
            "code",
            "title",
            "detail",
            "source"
          ]
        },
        "GetTagResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetTagResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetTagGroupResponseCollection": {
          "type": "object",
          "required": [
            "data",
            "links"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id",
                  "attributes",
                  "links"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag-group"
                    ]
                  },
                  "id": {
                    "type": "string"
                  },
                  "attributes": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "exclusive": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "name",
                      "exclusive",
                      "default"
                    ]
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "self": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "self"
                    ]
                  }
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                },
                "first": {
                  "type": "string",
                  "format": "uri"
                },
                "last": {
                  "type": "string",
                  "format": "uri"
                },
                "prev": {
                  "type": "string",
                  "format": "uri"
                },
                "next": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          }
        },
        "GetTagGroupResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "exclusive": {
                      "type": "boolean"
                    },
                    "default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "GetTagTagGroupRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag-group"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "GetTagGroupTagRelationshipsResponseCollection": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "tag"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "CatalogItemCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "title": {
                  "type": "string"
                },
                "catalog_type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogItemCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
            }
          }
        },
        "CatalogVariantCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "catalog_type": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              },
              "required": [
                "external_id",
                "title",
                "description",
                "sku",
                "inventory_policy",
                "inventory_quantity",
                "price",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogVariantCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
            }
          }
        },
        "CatalogCategoryCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "integration_type": {
                  "type": "string",
                  "enum": [
                    "$custom"
                  ],
                  "description": "The integration type. Currently, this can only be set to $custom (and defaults to $custom if not included in the payload)."
                },
                "catalog_type": {
                  "type": "string"
                }
              },
              "required": [
                "external_id",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogCategoryCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
            }
          }
        },
        "_MetricCreateQuery": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "service": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "EventCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "event"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object"
                },
                "metric": {
                  "$ref": "#/components/schemas/_MetricCreateQuery"
                },
                "properties": {
                  "type": "object"
                },
                "time": {
                  "type": "string",
                  "format": "date-time"
                },
                "value": {
                  "type": "number"
                },
                "unique_id": {
                  "type": "string"
                }
              },
              "required": [
                "profile",
                "metric",
                "properties"
              ]
            }
          }
        },
        "EventCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/EventCreateQueryAsSubResource"
            }
          }
        },
        "MetricAggregateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "metric-aggregate"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "metric_id": {
                  "type": "string"
                },
                "measurements": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "count",
                      "sum_value",
                      "unique"
                    ],
                    "description": "Supported measurements for aggregation"
                  }
                },
                "interval": {
                  "type": "string",
                  "enum": [
                    "day",
                    "hour",
                    "month",
                    "week"
                  ],
                  "description": "Supported intervals for bucketing query results by time"
                },
                "page_size": {
                  "type": "integer"
                },
                "by": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "$attributed_channel",
                      "$attributed_flow",
                      "$attributed_message",
                      "$attributed_variation",
                      "$campaign_channel",
                      "$flow",
                      "$flow_channel",
                      "$message",
                      "$message_send_cohort",
                      "$variation",
                      "$variation_send_cohort",
                      "Bounce Type",
                      "Campaign Name",
                      "Client Canonical",
                      "Client Name",
                      "Client Type",
                      "Email Domain",
                      "Failure Source",
                      "Failure Type",
                      "From Number",
                      "From Phone Region",
                      "List",
                      "Message Name",
                      "Message Type",
                      "Method",
                      "Subject",
                      "To Number",
                      "To Phone Region",
                      "URL",
                      "form_id"
                    ],
                    "description": "Supported dimensions for grouping and filtering"
                  }
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filter": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "timezone": {
                  "type": "string"
                }
              },
              "required": [
                "metric_id",
                "measurements",
                "interval",
                "filter",
                "timezone"
              ]
            }
          }
        },
        "MetricAggregateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/MetricAggregateQueryAsSubResource"
            }
          }
        },
        "MetricAggregateRowDTO": {
          "type": "object",
          "properties": {
            "dimensions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "measurements": {
              "type": "object"
            }
          },
          "required": [
            "dimensions",
            "measurements"
          ]
        },
        "ListCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "ListCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListCreateQueryAsSubResource"
            }
          }
        },
        "ProfileCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "ProfileCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfileCreateQueryAsSubResource"
            }
          }
        },
        "CampaignCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "audiences": {
                  "$ref": "#/components/schemas/AudiencesSubObject"
                },
                "send_strategy": {
                  "$ref": "#/components/schemas/SendStrategySubObject"
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptionsSubObject"
                },
                "tracking_options": {
                  "$ref": "#/components/schemas/TrackingOptionsSubObject"
                }
              },
              "required": [
                "name",
                "channel",
                "audiences",
                "send_options"
              ]
            }
          }
        },
        "CampaignCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignCreateQueryAsSubResource"
            }
          }
        },
        "CampaignCloneQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "new_name": {
                  "type": "string"
                }
              }
            }
          }
        },
        "CampaignCloneQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignCloneQueryAsSubResource"
            }
          }
        },
        "CampaignSendJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign-send-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "CampaignSendJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignSendJobCreateQueryAsSubResource"
            }
          }
        },
        "TemplateCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "editor_type": {
                  "type": "string"
                },
                "html": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name",
                "editor_type"
              ]
            }
          }
        },
        "TemplateCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCreateQueryAsSubResource"
            }
          }
        },
        "V2TemplateRenderQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "context": {
                  "type": "object"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "context"
              ]
            }
          }
        },
        "V2TemplateRenderQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/V2TemplateRenderQueryAsSubResource"
            }
          }
        },
        "TemplateCloneQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "TemplateCloneQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateCloneQueryAsSubResource"
            }
          }
        },
        "CatalogItemCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogItemUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogItemDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogItemDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "items"
              ]
            }
          }
        },
        "CatalogItemDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogVariantCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogVariantUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogVariantDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "variants": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogVariantDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "variants"
              ]
            }
          }
        },
        "CatalogVariantDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogCategoryCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryCreateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogCategoryUpdateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-update-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryUpdateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateJobCreateQueryAsSubResource"
            }
          }
        },
        "CatalogCategoryDeleteJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category-bulk-delete-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogCategoryDeleteQueryAsSubResource"
                  }
                }
              },
              "required": [
                "categories"
              ]
            }
          }
        },
        "CatalogCategoryDeleteJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryDeleteJobCreateQueryAsSubResource"
            }
          }
        },
        "TagCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "tag"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "tag_group_id": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "TagCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagCreateQueryAsSubResource"
            }
          }
        },
        "PostTagResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "TagGroupCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "tag-group"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "exclusive": {
                  "type": "boolean"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "TagGroupCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagGroupCreateQueryAsSubResource"
            }
          }
        },
        "PostTagGroupResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "exclusive": {
                      "type": "boolean"
                    },
                    "default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "TagSegmentOp": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "segment"
                    ]
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "Suppression": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            }
          },
          "required": [
            "email"
          ]
        },
        "SuppressionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-suppression-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          }
        },
        "SuppressionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SuppressionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "UnsuppressionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-unsuppression-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "suppressions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suppression"
                  }
                }
              },
              "required": [
                "suppressions"
              ]
            }
          }
        },
        "UnsuppressionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsuppressionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "Subscription": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            }
          }
        },
        "SubscriptionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-subscription-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "custom_source": {
                  "type": "string"
                },
                "subscriptions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              },
              "required": [
                "list_id",
                "subscriptions"
              ]
            }
          }
        },
        "SubscriptionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SubscriptionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "UnsubscriptionCreateJobCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile-unsubscription-bulk-create-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "list_id"
              ]
            }
          }
        },
        "UnsubscriptionCreateJobCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/UnsubscriptionCreateJobCreateQueryAsSubResource"
            }
          }
        },
        "DataPrivacyCreateDeletionJobQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "data-privacy-deletion-job"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "profile_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                }
              }
            }
          }
        },
        "DataPrivacyCreateDeletionJobQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/DataPrivacyCreateDeletionJobQueryAsSubResource"
            }
          }
        },
        "OnsiteSubscriptionCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "subscription"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "list_id": {
                  "type": "string"
                },
                "custom_source": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "properties": {
                  "type": "object"
                }
              },
              "required": [
                "list_id"
              ]
            }
          }
        },
        "OnsiteSubscriptionCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteSubscriptionCreateQueryAsSubResource"
            }
          }
        },
        "_OnsiteProfileMetaIdentifiers": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "external_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "phone_number": {
              "type": "string"
            },
            "anonymous_id": {
              "type": "string"
            },
            "_kx": {
              "type": "string"
            }
          }
        },
        "_OnsiteProfileMeta": {
          "type": "object",
          "properties": {
            "identifiers": {
              "$ref": "#/components/schemas/_OnsiteProfileMetaIdentifiers"
            }
          },
          "required": [
            "identifiers"
          ]
        },
        "OnsiteProfileCreateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "meta": {
              "$ref": "#/components/schemas/_OnsiteProfileMeta"
            }
          }
        },
        "OnsiteProfileCreateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/OnsiteProfileCreateQueryAsSubResource"
            }
          }
        },
        "CatalogItemUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "categories": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-category"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogItemUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogItemUpdateQueryAsSubResource"
            }
          }
        },
        "CatalogVariantUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "CatalogVariantUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogVariantUpdateQueryAsSubResource"
            }
          }
        },
        "CatalogCategoryUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            },
            "relationships": {
              "type": "object",
              "properties": {
                "items": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "catalog-item"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CatalogCategoryUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CatalogCategoryUpdateQueryAsSubResource"
            }
          }
        },
        "ListPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "ListPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ListPartialUpdateQueryAsSubResource"
            }
          }
        },
        "SegmentPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "segment"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "SegmentPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/SegmentPartialUpdateQueryAsSubResource"
            }
          }
        },
        "ProfilePartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            }
          }
        },
        "ProfilePartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/ProfilePartialUpdateQueryAsSubResource"
            }
          }
        },
        "FlowUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string"
                }
              },
              "required": [
                "status"
              ]
            }
          }
        },
        "FlowUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/FlowUpdateQueryAsSubResource"
            }
          }
        },
        "CampaignPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "audiences": {
                  "$ref": "#/components/schemas/AudiencesSubObject"
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptionsSubObject"
                },
                "tracking_options": {
                  "$ref": "#/components/schemas/TrackingOptionsSubObject"
                },
                "send_strategy": {
                  "$ref": "#/components/schemas/SendStrategySubObject"
                }
              }
            }
          }
        },
        "CampaignPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignPartialUpdateQueryAsSubResource"
            }
          }
        },
        "CampaignMessagePartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign-message"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "content": {
                  "$ref": "#/components/schemas/ContentSubObject"
                }
              }
            }
          }
        },
        "CampaignMessagePartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignMessagePartialUpdateQueryAsSubResource"
            }
          }
        },
        "CampaignSendJobPartialUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "campaign-send-job"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string"
                }
              },
              "required": [
                "action"
              ]
            }
          }
        },
        "CampaignSendJobPartialUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/CampaignSendJobPartialUpdateQueryAsSubResource"
            }
          }
        },
        "TemplateUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "template"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "html": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "TemplateUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TemplateUpdateQueryAsSubResource"
            }
          }
        },
        "TagUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "tag"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "TagUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagUpdateQueryAsSubResource"
            }
          }
        },
        "PatchTagResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "TagGroupUpdateQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id",
            "attributes"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "tag-group"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "return_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          }
        },
        "TagGroupUpdateQuery": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "$ref": "#/components/schemas/TagGroupUpdateQueryAsSubResource"
            }
          }
        },
        "PatchTagGroupResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "exclusive": {
                      "type": "boolean"
                    },
                    "default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "CatalogItemDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "CatalogVariantDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "CatalogCategoryDeleteQueryAsSubResource": {
          "type": "object",
          "required": [
            "type",
            "id"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            }
          }
        },
        "DeleteTagResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "DeleteTagGroupResponse": {
          "type": "object",
          "required": [
            "data"
          ],
          "properties": {
            "data": {
              "type": "object",
              "required": [
                "type",
                "id",
                "attributes",
                "links"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tag-group"
                  ]
                },
                "id": {
                  "type": "string"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "exclusive": {
                      "type": "boolean"
                    },
                    "default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "exclusive",
                    "default"
                  ]
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "self": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "required": [
                    "self"
                  ]
                }
              }
            }
          }
        },
        "IncludedVariants": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-variant"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "sku": {
                  "type": "string"
                },
                "inventory_policy": {
                  "type": "integer",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "description": "A field that controls product visibility in product feeds/blocks. This field has two options:     DENY (1): a product will not appear in dynamic product recommendation feeds and blocks if it is out of stock.     CONTINUE (2): a product can appear in dynamic product recommendation feeds and blocks regardless of inventory quantity.     UNKNOWN (0): the behavior will be the same as if it were set to 2 [Default]"
                },
                "inventory_quantity": {
                  "type": "number"
                },
                "price": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedMetrics": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "metric"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "integration": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedProfiles": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_event_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedTags": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "tag"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedLists": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "list"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedSegments": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "segment"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedProfile": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "profile"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "phone_number": {
                  "type": "string"
                },
                "external_id": {
                  "type": "string"
                },
                "anonymous_id": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "organization": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "last_event_date": {
                  "type": "string",
                  "format": "date-time"
                },
                "location": {
                  "$ref": "#/components/schemas/ProfileLocation"
                },
                "properties": {
                  "type": "object"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowActions": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-action"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action_type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "settings": {
                  "type": "object"
                },
                "tracking_options": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTrackingOptions"
                    },
                    {
                      "$ref": "#/components/schemas/SMSTrackingOptions"
                    }
                  ]
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptions"
                },
                "render_options": {
                  "$ref": "#/components/schemas/SMSRenderOptions"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowMessages": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-message"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "channel": {
                  "type": "string"
                },
                "content": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailMessageContent"
                    },
                    {
                      "$ref": "#/components/schemas/SMSMessageContent"
                    }
                  ]
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "name",
                "channel",
                "content"
              ]
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlows": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "archived": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "trigger_type": {
                  "type": "string"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedFlowAction": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "flow-action"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "action_type": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                },
                "settings": {
                  "type": "object"
                },
                "tracking_options": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/EmailTrackingOptions"
                    },
                    {
                      "$ref": "#/components/schemas/SMSTrackingOptions"
                    }
                  ]
                },
                "send_options": {
                  "$ref": "#/components/schemas/SendOptions"
                },
                "render_options": {
                  "$ref": "#/components/schemas/SMSRenderOptions"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedItems": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-item"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "image_full_url": {
                  "type": "string"
                },
                "image_thumbnail_url": {
                  "type": "string"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "custom_metadata": {
                  "type": "object"
                },
                "published": {
                  "type": "boolean"
                },
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        },
        "IncludedCategories": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "catalog-category"
              ]
            },
            "id": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "external_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "updated": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "links": {
              "type": "object",
              "properties": {
                "self": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "required": [
                "self"
              ]
            }
          },
          "required": [
            "type",
            "id",
            "attributes",
            "links"
          ]
        }
      },
      "responses": {
        "ClientError": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Client Error"
        },
        "ServerError": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "errors"
                ],
                "properties": {
                  "errors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "code",
                        "title",
                        "detail"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "detail": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "pointer": {
                              "type": "string"
                            },
                            "parameter": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "description": "Server Error"
        }
      },
      "securitySchemes": {
        "Klaviyo-API-Key": {
          "type": "apiKey",
          "in": "header",
          "name": "Authorization",
          "description": "Private key authentication for /api/ endpoints is performed by setting the `Authorization` header to `Klaviyo-API-Key your-private-api-key`<br>For more information please visit https://developers.klaviyo.com/en/v2022-11-14.pre/reference/api-overview#authentication",
          "x-default": "Klaviyo-API-Key your-private-api-key"
        }
      }
    },
    "servers": [
      {
        "url": "https://a.klaviyo.com",
        "description": "Production"
      }
    ],
    "security": [
      {
        "Klaviyo-API-Key": []
      }
    ],
    "tags": [
      {
        "name": "Flows",
        "description": "flows"
      },
      {
        "name": "Lists",
        "description": "lists"
      },
      {
        "name": "Segments",
        "description": "segments"
      },
      {
        "name": "Tags",
        "description": "tags"
      },
      {
        "name": "Data Privacy",
        "description": "data privacy"
      }
    ],
    "x-readme": {
      "explorer-enabled": false,
      "proxy-enabled": true,
      "samples-enabled": true
    }
  }